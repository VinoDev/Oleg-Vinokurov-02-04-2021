{"version":3,"sources":["components/Navbar.js","components/SearchForm.js","components/ForecastItem.js","state/favouritesSlice.js","hooks/useFavourite.js","components/FavoriteButton.js","assets/Sun.svg","assets/Partly-Cloudy.svg","assets/Cloud.svg","assets/Fog.svg","assets/Rain.svg","assets/Thunder-Storm.svg","assets/Snow.svg","assets/Moon.svg","assets/Partly-Cloudy-Moon.svg","utils/iconPicker.js","components/WeatherInfo.js","api.js","state/weatherSlice.js","hooks/useAutocomplete.js","utils/dateToDay.js","hooks/useGetWeatherAndForecast.js","hooks/useForm.js","pages/Home.js","pages/Favourites.js","hooks/useErrorHandler.js","App.js","store.js","index.js"],"names":["Navbar","className","to","activeClassName","SearchForm","handleSubmit","handleChange","userInput","onSubmit","e","TextField","variant","label","value","onChange","Button","type","ForecastItem","data","day","maxTemp","minTemp","favouritesSlice","createSlice","name","initialState","favourites","reducers","addToFavourites","state","action","payload","removeFromFavourites","filter","favorite","key","useFavourite","dispatch","useDispatch","useSelector","weather","city","weatherText","weatherIcon","temp","actions","isFavorite","some","handleFavourite","FavoriteButton","useFavorite","IconButton","onClick","iconPicker","iconId","Sun","PartlyCloudy","Cloud","Fog","Rain","ThunderStorm","Snow","Moon","PartlyCloudMoon","WeatherInfo","forecast","src","alt","length","map","dayForecast","index","API_KEY","process","fetchWeather","locationKey","a","url","fetch","res","json","Error","fetchForecast","DailyForecasts","autocompleteSearch","query","weatherSlice","loadingData","loadingAutocomplete","error","weatherAndForecastRequest","weatherAndForecastSuccess","weatherAndForecastFail","autocompleteRequest","autocompleteSuccess","autocompleteFail","clearError","useAutocomplete","CurrentLocationSlice","handleAutocomplete","results","mostRelevantResult","cityData","Key","LocalizedName","dateToDay","date","Date","getDay","useGetWeatherAndForecast","getWeatherAndForecast","handleWeatherData","handleForecastData","result","weatherData","Temperature","Metric","Value","toString","WeatherText","WeatherIcon","forecastData","Minimum","Maximum","useForm","useState","setUserInput","preventDefault","trim","target","test","Home","CircularProgress","Favourites","useErrorHandler","enqueueSnackbar","useSnackbar","showErrorMessage","preventDuplicate","App","useEffect","path","exact","component","rootReducer","combineReducers","reducer","store","configureStore","ReactDOM","render","StrictMode","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.b9755485.chunk.js","sourcesContent":["import './navbar.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n      <div className=\"navbar\">\r\n        <span className=\"brand\">Weather</span>\r\n        <div className=\"nav-links\">\r\n          <NavLink to=\"/Oleg-Vinokurov-02-04-2021\" activeClassName=\"active-link\">Home</NavLink>\r\n          <NavLink to=\"/favourites\" activeClassName=\"active-link\">Favourites</NavLink>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import './searchForm.css';\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst SearchForm = ({handleSubmit, handleChange, userInput}) => {\r\n\r\n    return (\r\n        <form className=\"search-form\" onSubmit={e=>handleSubmit(e)}>\r\n            <TextField\r\n              variant=\"filled\"  \r\n              label=\"City\"\r\n              className=\"search-field\"\r\n              value={userInput}\r\n              onChange={(e)=>handleChange(e)}\r\n            />\r\n            <Button type=\"submit\">\r\n                <SearchIcon/>\r\n            </Button>\r\n        </form>  \r\n    );\r\n    \r\n}\r\n\r\nexport default SearchForm;\r\n","import './forecast-item.css';\r\n\r\n\r\nconst ForecastItem = ({data}) => {\r\n\r\n  return (\r\n    <div className=\"forecast-item\">\r\n        <span className=\"forecast-day\">\r\n            {data.day}\r\n        </span>\r\n        <span>\r\n            {data.maxTemp+\"°C\"}\r\n        </span>\r\n        <span className=\"min-temp\">\r\n            {data.minTemp+\"°C\"}\r\n        </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForecastItem;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    favourites: []\r\n}\r\n\r\nconst favouritesSlice = createSlice({\r\n  name: \"favourites\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    addToFavourites: (state, action) => {\r\n        state.favourites = [...state.favourites, action.payload];\r\n    },\r\n    removeFromFavourites: (state, action) => {\r\n        state.favourites = state.favourites.filter((favorite) => {\r\n            return favorite.key !== action.payload;\r\n        });    \r\n    },\r\n  },\r\n});\r\n\r\nexport default favouritesSlice;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport favouritesSlice from '../state/favouritesSlice';\r\n\r\nconst useFavourite = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { city, key, weatherText, weatherIcon, temp } = useSelector((state) => state.weather);\r\n    const { favourites } = useSelector((state) => state.favourites);\r\n\r\n    const { \r\n        addToFavourites,\r\n        removeFromFavourites\r\n    } = favouritesSlice.actions;\r\n\r\n    const isFavorite = favourites.some((favorite) => key === favorite.key);\r\n\r\n    const handleFavourite = () => {\r\n        if(isFavorite) {\r\n            dispatch(removeFromFavourites(key))\r\n        } else {\r\n            dispatch(addToFavourites({ key, city, weatherText, weatherIcon, temp }))\r\n        }\r\n    }\r\n\r\n    return { handleFavourite, isFavorite }\r\n\r\n}\r\n\r\nexport default useFavourite;","import './favoriteButton.css'\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport useFavorite from '../hooks/useFavourite.js';\r\n\r\nconst FavoriteButton = () => {\r\n\r\n    const { handleFavourite, isFavorite } = useFavorite();\r\n\r\n    return (\r\n        <div className=\"favorite-toggle\">\r\n            <IconButton onClick={handleFavourite}>\r\n                {\r\n                    isFavorite ? <FavoriteIcon/> : <FavoriteBorderIcon/>\r\n                }\r\n            </IconButton>\r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default FavoriteButton","export default __webpack_public_path__ + \"static/media/Sun.b6137c72.svg\";","export default __webpack_public_path__ + \"static/media/Partly-Cloudy.e31510c0.svg\";","export default __webpack_public_path__ + \"static/media/Cloud.d61e7b67.svg\";","export default __webpack_public_path__ + \"static/media/Fog.b7e20899.svg\";","export default __webpack_public_path__ + \"static/media/Rain.778544a0.svg\";","export default __webpack_public_path__ + \"static/media/Thunder-Storm.53d9ec44.svg\";","export default __webpack_public_path__ + \"static/media/Snow.64d4e146.svg\";","export default __webpack_public_path__ + \"static/media/Moon.ed272c07.svg\";","export default __webpack_public_path__ + \"static/media/Partly-Cloudy-Moon.2ef9512f.svg\";","import Sun from '../assets/Sun.svg';\r\nimport PartlyCloudy from '../assets/Partly-Cloudy.svg';\r\nimport Cloud from '../assets/Cloud.svg';\r\nimport Fog from '../assets/Fog.svg';\r\nimport Rain from '../assets/Rain.svg';\r\nimport ThunderStorm from '../assets/Thunder-Storm.svg';\r\nimport Snow from '../assets/Snow.svg';\r\nimport Moon from '../assets/Moon.svg';\r\nimport PartlyCloudMoon from '../assets/Partly-Cloudy-Moon.svg';\r\n\r\nconst iconPicker = (iconId) => {\r\n\r\n    switch(iconId) {\r\n        case 1: case 2:\r\n            return Sun;\r\n        case 3: case 4: case 5:\r\n            return PartlyCloudy;\r\n        case 6: case 7: case 8:\r\n            return Cloud;\r\n        case 11:\r\n            return Fog;\r\n        case 12: case 13: case 14: case 18: case 39: case 40:\r\n            return Rain;\r\n        case 15: case 16: case 17: case 41: case 42:\r\n            return ThunderStorm\r\n        case 19: case 20: case 21: case 22: case 23: case 24: case 25: case 26:\r\n        case 27: case 28: case 29: case 43: case 44:\r\n            return Snow\r\n        case 33: case 34:\r\n            return Moon\r\n        case 35: case 36: case 37: case 38:\r\n            return PartlyCloudMoon\r\n        default:\r\n            return Sun\r\n    }\r\n\r\n}\r\n\r\nexport default iconPicker","import './weather-info.css';\r\nimport ForecastItem from './ForecastItem.js';\r\nimport { useSelector } from \"react-redux\";\r\nimport FavoriteButton from './FavoriteButton.js';\r\nimport iconPicker from '../utils/iconPicker.js';\r\n\r\nconst WeatherInfo = () => {\r\n\r\n    const { city, temp, forecast, weatherIcon } = useSelector((state) => state.weather);\r\n\r\n    return (\r\n        <div className=\"weather-info\">\r\n\r\n            <div className=\"info-top\">\r\n                \r\n                <div className=\"current-city\">\r\n                    <img src={iconPicker(weatherIcon)} alt=\"icon\" className=\"icon-demo\"/>\r\n                    <div className=\"current-city-info\">\r\n                        <span>{`${city}`}</span>\r\n                        <span>{`${temp} °C`}</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <FavoriteButton/>\r\n\r\n            </div>\r\n            <div className=\"info-bottom\">\r\n                {forecast.length > 0 && forecast.map((dayForecast, index) => {\r\n                    return (\r\n                        <ForecastItem \r\n                            key={index}\r\n                            data={{\r\n                                day: dayForecast.day,\r\n                                minTemp: dayForecast.minTemp,\r\n                                maxTemp: dayForecast.maxTemp\r\n                            }}\r\n                        /> \r\n                    )                       \r\n                })}              \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherInfo;\r\n","const API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nexport const fetchWeather = async (locationKey) => {\r\n\r\n    const url = `https://dataservice.accuweather.com/currentconditions/v1/${locationKey}?apikey=${API_KEY}`\r\n    try {\r\n\r\n        const res = await fetch(url);\r\n        const data = await res.json();\r\n\r\n        return data[0];\r\n    } catch (error) {\r\n        throw new Error(error)\r\n    }\r\n}\r\n\r\nexport const fetchForecast = async (locationKey) => {\r\n    const url = `https://dataservice.accuweather.com/forecasts/v1/daily/5day/${locationKey}?apikey=${API_KEY}&metric=true`\r\n    try {\r\n        const res = await fetch(url);\r\n        const data = await res.json();\r\n\r\n        return data.DailyForecasts\r\n    } catch (error) {\r\n        throw new Error(error)\r\n    }\r\n}\r\n\r\nexport const autocompleteSearch = async (query) => {\r\n    const url = `https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${API_KEY}&q=${query}`\r\n    try {\r\n        const res = await fetch(url);\r\n        let data = await res.json();\r\n\r\n        return data \r\n    } catch (error) {\r\n        throw new Error(error)\r\n    }\r\n}","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  city: \"\",\r\n  temp: \"\",\r\n  weatherText: \"\",\r\n  weatherIcon: \"\",\r\n  key: \"\",\r\n  forecast: [],\r\n  loadingData: false,\r\n  loadingAutocomplete: false,\r\n  error: \"\"\r\n}\r\n\r\nconst weatherSlice = createSlice({\r\n  name: \"weather\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    weatherAndForecastRequest: (state, action) => {\r\n      state.loadingData = true;\r\n      state.error = \"\";\r\n    },\r\n    weatherAndForecastSuccess: (state, action) => {\r\n      state.loadingData = false;\r\n      state.weatherText = action.payload.weatherText;\r\n      state.weatherIcon = action.payload.weatherIcon;\r\n      state.temp = action.payload.temp;\r\n      state.forecast = action.payload.forecast;\r\n      state.key = action.payload.key\r\n      state.city = action.payload.city\r\n    },\r\n    weatherAndForecastFail: (state, action) => {\r\n      state.loadingData = false;\r\n      state.error = action.payload\r\n    },\r\n    autocompleteRequest: (state, action) => {\r\n      state.loadingAutocomplete = true;\r\n      state.error = \"\";\r\n    },\r\n    autocompleteSuccess: (state, action) => {\r\n      state.loadingAutocomplete = false;\r\n      state.key = action.payload.key\r\n      state.city = action.payload.city\r\n    },\r\n    autocompleteFail: (state, action) => {\r\n      state.loadingAutocomplete = false;\r\n      state.error = action.payload\r\n    },\r\n    clearError: (state) => {\r\n      state.error = ''\r\n    }\r\n  },\r\n});\r\n\r\nexport default weatherSlice;\r\n","import { autocompleteSearch } from '../api.js';\r\nimport CurrentLocationSlice from '../state/weatherSlice.js';\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useAutocomplete = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { \r\n        autocompleteRequest,\r\n        autocompleteSuccess,\r\n        autocompleteFail,\r\n    } = CurrentLocationSlice.actions;\r\n    \r\n    const handleAutocomplete = async (userInput) => {\r\n        try {\r\n            dispatch(autocompleteRequest())\r\n\r\n            const results = await autocompleteSearch(userInput);\r\n    \r\n            if(results.length === 0) {\r\n                dispatch(autocompleteFail(`City not found.`))\r\n                return false\r\n            }\r\n\r\n            const mostRelevantResult = results[0];\r\n            const cityData = {key: mostRelevantResult.Key, city: mostRelevantResult.LocalizedName}\r\n\r\n            dispatch(autocompleteSuccess(cityData))\r\n            \r\n            return cityData;   \r\n        } catch (error) {\r\n            dispatch(autocompleteFail(\"Something went wrong...\"))\r\n        }\r\n    }\r\n\r\n    return { handleAutocomplete }\r\n}\r\n\r\nexport default useAutocomplete;","\r\nconst dateToDay = (date) => {\r\n    const days = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];\r\n    const dateObj = new Date(date);\r\n    \r\n    return days[dateObj.getDay()];\r\n}\r\n\r\nexport default dateToDay","import { useDispatch } from \"react-redux\";\r\nimport { fetchWeather, fetchForecast } from '../api.js';\r\nimport weatherSlice from '../state/weatherSlice.js';\r\nimport dateToDay from '../utils/dateToDay.js';\r\n\r\nconst useGetWeatherAndForecast = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const { \r\n        weatherAndForecastRequest,\r\n        weatherAndForecastSuccess,\r\n        weatherAndForecastFail\r\n    } = weatherSlice.actions;\r\n\r\n    const getWeatherAndForecast = async ({key, city}) => {\r\n        try {\r\n\r\n            dispatch(weatherAndForecastRequest());\r\n\r\n            const weather = await handleWeatherData(key);\r\n            const forecast = await handleForecastData(key);\r\n\r\n            const data = {...weather, forecast, key, city}\r\n            \r\n            dispatch(weatherAndForecastSuccess(data))\r\n\r\n        } catch (error) {\r\n            dispatch(weatherAndForecastFail(\"Something went wrong...\"))\r\n        }\r\n    }\r\n\r\n    const handleWeatherData = async (key) => {\r\n        const result = await fetchWeather(key);\r\n\r\n        const weatherData = {\r\n            temp: result.Temperature.Metric.Value.toString(),\r\n            weatherText: result.WeatherText,\r\n            weatherIcon: result.WeatherIcon\r\n        }\r\n\r\n        return weatherData;\r\n    }\r\n\r\n    const handleForecastData = async (key) => {\r\n        const result = await fetchForecast(key);\r\n\r\n        const forecastData = result.map(dayForecast => {\r\n\r\n            return {\r\n                day: dateToDay(dayForecast.Date),\r\n                minTemp: dayForecast.Temperature.Minimum.Value.toString(),\r\n                maxTemp: dayForecast.Temperature.Maximum.Value.toString()\r\n            }\r\n        })\r\n\r\n        return forecastData;\r\n    }\r\n\r\n    return { getWeatherAndForecast }\r\n}\r\n\r\nexport default useGetWeatherAndForecast;","import { useState } from 'react';\r\nimport useAutocomplete from '../hooks/useAutocomplete.js';\r\nimport useGetWeatherAndForecast from '../hooks/useGetWeatherAndForecast.js';\r\n\r\nconst useForm = () => {\r\n\r\n    const [ userInput, setUserInput ] = useState('');\r\n    const { getWeatherAndForecast } = useGetWeatherAndForecast();\r\n    const { handleAutocomplete } = useAutocomplete();\r\n\r\n    const handleChange = (e) => {\r\n        const regex = /^[a-z_ ]+$/i\r\n        if(e.target.value === '' || regex.test(e.target.value)){\r\n            setUserInput(e.target.value)\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        try {\r\n            e.preventDefault()\r\n            if(userInput){\r\n                userInput.trim();\r\n\r\n                const cityData = await handleAutocomplete(userInput);\r\n                setUserInput('');\r\n                \r\n                if(cityData.key){\r\n                    getWeatherAndForecast({...cityData})\r\n                    return true\r\n                } else {\r\n                    return false\r\n                }\r\n            } \r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    return { handleSubmit, handleChange, userInput }\r\n    \r\n}\r\n\r\nexport default useForm;\r\n","import './home.css';\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SearchForm from '../components/SearchForm.js'\r\nimport WeatherInfo from '../components/WeatherInfo.js'\r\nimport useForm from \"../hooks/useForm.js\";\r\n\r\nconst Home = () => {\r\n\r\n    const { handleSubmit, handleChange, userInput } = useForm();\r\n    const { loadingData, loadingAutocomplete, error } = useSelector((state) => state.weather);  \r\n\r\n    if( loadingData || loadingAutocomplete ) {\r\n        return (\r\n          <div className=\"load-container\">\r\n            <CircularProgress/>\r\n          </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"home\">\r\n                <SearchForm handleSubmit={handleSubmit} handleChange={handleChange} userInput={userInput} />\r\n                {!error && <WeatherInfo/>}\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Home;\r\n","import './favourites.css'\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Favourites = () => {\r\n\r\n    const { favourites } = useSelector((state) => state.favourites);\r\n\r\n    if(favourites.length > 0) {\r\n        return (\r\n            <div className=\"favourites\">\r\n                {\r\n                    favourites.map((favorite) => {\r\n                        return (\r\n                            <div className=\"favorite-item\" key={favorite.key}>\r\n                                <span className=\"favorite-city\">{favorite.city}</span>\r\n                                <span>{`${favorite.temp} °C`}</span>\r\n                                <span>{favorite.weatherText}</span>\r\n                                {/* <span>{favorite.weatherIcon}</span> */}\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"no-data-msg\">\r\n                You have no favorite location saved.\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Favourites;\r\n","import { useSnackbar } from 'notistack';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst useErrorHandler = () => {\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const { error } = useSelector((state) => state.weather);\r\n\r\n    const showErrorMessage = (error) => {\r\n        enqueueSnackbar(error, {variant: \"error\", preventDuplicate: true})\r\n    }\r\n\r\n    return {showErrorMessage, error}\r\n}\r\n\r\nexport default useErrorHandler","import './app.css';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport Navbar from './components/Navbar.js';\r\nimport Home from './pages/Home.js';  \r\nimport Favourites from './pages/Favourites.js';\r\nimport { useEffect } from 'react';\r\nimport useErrorHandler from './hooks/useErrorHandler.js';\r\nimport useGetWeatherAndForecast from './hooks/useGetWeatherAndForecast.js';\r\n\r\nconst App = () => {\r\n\r\n  const { getWeatherAndForecast } = useGetWeatherAndForecast();\r\n  const { showErrorMessage, error } = useErrorHandler()\r\n  \r\n  useEffect(()=>{\r\n    const initCity = {key: \"215854\", city: \"Tel Aviv\"}\r\n    getWeatherAndForecast(initCity)\r\n  }, [])   \r\n\r\n  useEffect(()=>{\r\n    error && showErrorMessage(error)\r\n  }, [error])\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <BrowserRouter>\r\n        <Navbar/>\r\n        <Route path=\"/Oleg-Vinokurov-02-04-2021\" exact={true} component={Home}/>\r\n        <Route path=\"/favourites\" exact={true} component={Favourites}/>\r\n      </BrowserRouter>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import {combineReducers} from 'redux';\r\nimport {configureStore} from \"@reduxjs/toolkit\"\r\nimport weatherSlice from './state/weatherSlice.js';\r\nimport favouritesSlice from './state/favouritesSlice.js';\r\n\r\nconst rootReducer = combineReducers({\r\n    weather: weatherSlice.reducer,\r\n    favourites: favouritesSlice.reducer\r\n})\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer\r\n})\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from \"react-redux\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './store.js';\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <SnackbarProvider maxSnack={3}>\r\n        <App />\r\n      </SnackbarProvider>      \r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}